
-- You can define an operator called dot
(.) f g x = f (g x)

id : âˆ€ a. a -> a -- dot still fine in type parser
id x = x

id2 = id . id

-- You need a space or delimiter char after the dot,
-- otherwise Unison assumes it's a rooted name - this will look for
-- a term called `zonk` in the root:
--
-- foo = id .zonk

-- You can define qualified functions
(base.function..) f g x = f (g x)

-- looks weird, but consistent syntax with any other infix binding
object oop.syntax.. method = method object

ex =
  use base.function .
  (id . id) 42

ex2 = use oop.syntax .; 42 . id . id

> (ex, ex2)
